# ============================================
# MCP Server Configuration
# ============================================
spring.application.name=aiToSql-MCP-Server
server.port=${SERVER_PORT:8080}

# ============================================
# DataSource Configuration (Target Database)
# ============================================
# IMPORTANT: Configure ONLY ONE database connection below
# This MCP Server supports: Oracle, MSSQL, MySQL, PostgreSQL
#
# Configuration can be done via:
# 1. Environment Variables (recommended for Docker/K8s): DB_URL, DB_USERNAME, DB_PASSWORD, DB_DRIVER
# 2. application.properties (uncomment and configure below)

# PostgreSQL Example:
# spring.datasource.url=jdbc:postgresql://localhost:5432/production_db
# spring.datasource.driver-class-name=org.postgresql.Driver

# MySQL Example:
# spring.datasource.url=jdbc:mysql://localhost:3306/production_db
# spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Oracle Example:
# spring.datasource.url=jdbc:oracle:thin:@localhost:1521:xe
# spring.datasource.driver-class-name=oracle.jdbc.OracleDriver

# MSSQL (SQL Server) Example:
# spring.datasource.url=jdbc:sqlserver://localhost:1433;databaseName=production_db
# spring.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver

# Environment variable mapping (used when running in Docker)
spring.datasource.url=${DB_URL:jdbc:h2:mem:testdb}
spring.datasource.driver-class-name=${DB_DRIVER:org.h2.Driver}

# ============================================
# CRITICAL SECURITY WARNING
# ============================================
# The database user MUST have READ-ONLY permissions (SELECT only)
# This is the PRIMARY defense against SQL Injection from LLM-generated queries
spring.datasource.username=${DB_USERNAME:mcp_readonly_user}
spring.datasource.password=${DB_PASSWORD:secure_password}

# Connection Pool Settings
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.connection-timeout=30000

# ============================================
# Cache Configuration
# ============================================
spring.cache.cache-names=schema-structure,table-details,triggers
spring.cache.caffeine.spec=maximumSize=100,expireAfterWrite=30m
spring.cache.type=${CACHE_TYPE:caffeine}

# Enable/disable caching
cache.enabled=${CACHE_ENABLED:true}

# ============================================
# MCP Server Settings
# ============================================
mcp.server.name=Database Introspection MCP Server
mcp.server.version=1.0.0
mcp.max-query-rows=1000
mcp.enable-query-logging=true

# ============================================
# Logging Configuration
# ============================================
logging.level.com.magacho.aiToSql=INFO
logging.level.org.springframework.jdbc=DEBUG
logging.level.org.springframework.web=INFO
